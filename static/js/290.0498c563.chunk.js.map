{"version":3,"file":"static/js/290.0498c563.chunk.js","mappings":"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","sources":["components/ContentBlock/styles.ts","components/ContentBlock/index.tsx"],"sourcesContent":["import { Row } from \"antd\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nexport const ContentSection = styled(\"section\")`\r\n  position: relative;\r\n  padding: 10rem 2rem 8rem; /* Added horizontal padding for margin */\r\n  background-color: #E7F9FF;\r\n  box-sizing: border-box; /* Ensures padding doesn't overflow */\r\n  border-radius: 10px;\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 10rem 2rem 10rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const StyledRow = styled(Row)`\r\n  flex-direction: ${({ direction }: { direction: string }) =>\r\n    direction === \"left\" ? \"row\" : \"row-reverse\"};\r\n`;\r\n\r\nexport const ContentWrapper = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 540px;\r\n  padding: 2rem; /* Added padding for better spacing */\r\n\r\n  @media only screen and (max-width: 575px) {\r\n    padding: 1.5rem;\r\n    padding-top: 4rem;\r\n  }\r\n`;\r\n\r\nexport const ServiceWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n  padding: 1.5rem; /* Added padding for spacing */\r\n`;\r\n\r\nexport const MinTitle = styled(\"h6\")`\r\n  font-size: 15px;\r\n  line-height: 1rem;\r\n  padding: 0.5rem 0;\r\n  text-transform: uppercase;\r\n  color: #000;\r\n  font-family: \"Motiva Sans Light\", sans-serif;\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  font-size: 2.5rem;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const MinPara = styled(\"p\")`\r\n  font-size: 13px;\r\n`;\r\n\r\nexport const ButtonWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n  margin-top: 1rem; /* Added margin for spacing above buttons */\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    max-width: 80%;\r\n  }\r\n\r\n  button:last-child {\r\n    margin-left: 20px;\r\n  }\r\n`;\r\n","import { Row, Col } from \"antd\";\r\nimport { Fade } from \"react-awesome-reveal\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport { ContentBlockProps } from \"./types\";\r\nimport { Button } from \"../../common/Button\";\r\nimport { SvgIcon } from \"../../common/SvgIcon\";\r\nimport {\r\n  ContentSection,\r\n  Content,\r\n  ContentWrapper,\r\n  ServiceWrapper,\r\n  MinTitle,\r\n  MinPara,\r\n  StyledRow,\r\n  ButtonWrapper,\r\n  Title\r\n} from \"./styles\";\r\n\r\nconst ContentBlock = ({\r\n  icon,\r\n  title,\r\n  content,\r\n  section,\r\n  button,\r\n  t,\r\n  id,\r\n  direction,\r\n}: ContentBlockProps) => {\r\n  const scrollTo = (id: string) => {\r\n    const element = document.getElementById(id) as HTMLDivElement;\r\n    element.scrollIntoView({\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ContentSection>\r\n      <Fade direction={direction} triggerOnce>\r\n        <StyledRow\r\n          justify=\"space-between\"\r\n          align=\"middle\"\r\n          id={id}\r\n          direction={direction}\r\n        >\r\n          <Col lg={11} md={11} sm={12} xs={24}>\r\n            {id !== \"mission\" && (\r\n              <SvgIcon src={icon} width=\"100%\" height=\"100%\" />\r\n            )}\r\n          </Col>\r\n          <Col lg={11} md={11} sm={11} xs={24}>\r\n            <ContentWrapper>\r\n              <Title>{t(title)}</Title>\r\n              <Content>\r\n                <ReactMarkdown>{t(content)}</ReactMarkdown>\r\n              </Content>\r\n              {id === \"mission\" ? (\r\n                <iframe\r\n                  width=\"560\"\r\n                  height=\"315\"\r\n                  src=\"https://www.youtube.com/embed/MD6V-nAFbAM?si=UYFiJk5DhYr-0jZT\"\r\n                  title=\"YouTube video player\"\r\n                  frameBorder=\"0\"\r\n                  allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\r\n                  referrerPolicy=\"strict-origin-when-cross-origin\"\r\n                  allowFullScreen\r\n                ></iframe>\r\n              ) : direction === \"right\" ? (\r\n                <ButtonWrapper>\r\n                  {typeof button === \"object\" &&\r\n                    button.map(\r\n                      (\r\n                        item: {\r\n                          color?: string;\r\n                          title: string;\r\n                        },\r\n                        id: number\r\n                      ) => {\r\n                        const targetId = item.title === \"Explore\" ? \"about\" : \"contact\";\r\n                        return (\r\n                          <Button\r\n                            key={id}\r\n                            color={item.color}\r\n                            onClick={() => scrollTo(targetId)}\r\n                          >\r\n                            {t(item.title)}\r\n                          </Button>\r\n                        );\r\n                      }\r\n                    )}\r\n                </ButtonWrapper>\r\n              ) : (\r\n                <ServiceWrapper>\r\n                  <Row justify=\"space-between\">\r\n                    {typeof section === \"object\" &&\r\n                      section.map(\r\n                        (\r\n                          item: {\r\n                            title: string;\r\n                            content: string;\r\n                            icon: string;\r\n                          },\r\n                          id: number\r\n                        ) => {\r\n                          return (\r\n                            <Col key={id} span={11}>\r\n                              <SvgIcon\r\n                                src={item.icon}\r\n                                width=\"60px\"\r\n                                height=\"60px\"\r\n                              />\r\n                              <MinTitle>{t(item.title)}</MinTitle>\r\n                              <MinPara>{t(item.content)}</MinPara>\r\n                            </Col>\r\n                          );\r\n                        }\r\n                      )}\r\n                  </Row>\r\n                </ServiceWrapper>\r\n              )}\r\n            </ContentWrapper>\r\n          </Col>\r\n        </StyledRow>\r\n      </Fade>\r\n    </ContentSection>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(ContentBlock);"],"names":["ContentSection","styled","_templateObject","_taggedTemplateLiteral","Content","_templateObject2","StyledRow","Row","_templateObject3","_ref","direction","ContentWrapper","_templateObject4","ServiceWrapper","_templateObject5","MinTitle","_templateObject6","Title","h2","_templateObject7","MinPara","_templateObject8","ButtonWrapper","_templateObject9","withTranslation","icon","title","content","section","button","t","id","_jsx","children","Fade","triggerOnce","_jsxs","justify","align","Col","lg","md","sm","xs","SvgIcon","src","width","height","ReactMarkdown","frameBorder","allow","referrerPolicy","allowFullScreen","map","item","targetId","Button","color","onClick","document","getElementById","scrollIntoView","behavior","scrollTo","span"],"sourceRoot":""}